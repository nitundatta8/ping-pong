{
  "format": 1,
  "restore": {
    "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPong.Tests\\PingPong.Test.csproj": {}
  },
  "projects": {
    "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPong.Tests\\PingPong.Test.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPong.Tests\\PingPong.Test.csproj",
        "projectName": "PingPong.Test",
        "projectPath": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPong.Tests\\PingPong.Test.csproj",
        "packagesPath": "C:\\Users\\maili\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPong.Tests\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder"
        ],
        "configFilePaths": [
          "C:\\Users\\maili\\AppData\\Roaming\\NuGet\\NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "netcoreapp2.2"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "netcoreapp2.2": {
            "projectReferences": {
              "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\PingPong.csproj": {
                "projectPath": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\PingPong.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        }
      },
      "frameworks": {
        "netcoreapp2.2": {
          "dependencies": {
            "MSTest.TestAdapter": {
              "target": "Package",
              "version": "[1.2.0, )"
            },
            "MSTest.TestFramework": {
              "target": "Package",
              "version": "[1.2.0, )"
            },
            "Microsoft.NET.Test.Sdk": {
              "target": "Package",
              "version": "[15.0.0, )"
            },
            "Microsoft.NETCore.App": {
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.2.0, )",
              "autoReferenced": true
            }
          },
          "imports": [
            "net461"
          ],
          "assetTargetFallback": true,
          "warn": true
        }
      }
    },
    "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\PingPong.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\PingPong.csproj",
        "projectName": "PingPong",
        "projectPath": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\PingPong.csproj",
        "packagesPath": "C:\\Users\\maili\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\maili\\github\\ping-pong-c\\PingPong.Solution\\PingPongStuff\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder"
        ],
        "configFilePaths": [
          "C:\\Users\\maili\\AppData\\Roaming\\NuGet\\NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "netcoreapp2.2"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "netcoreapp2.2": {
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        }
      },
      "frameworks": {
        "netcoreapp2.2": {
          "dependencies": {
            "Microsoft.NETCore.App": {
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.2.0, )",
              "autoReferenced": true
            }
          },
          "imports": [
            "net461"
          ],
          "assetTargetFallback": true,
          "warn": true
        }
      }
    }
  }
}